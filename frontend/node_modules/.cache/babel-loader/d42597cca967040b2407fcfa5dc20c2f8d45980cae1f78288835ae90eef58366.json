{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ben\\\\Desktop\\\\Benjamin\\\\ELIFE\\\\CAPACITACAO\\\\DESAFIO\\\\definitive\\\\chatbot-openai\\\\frontend\\\\src\\\\components\\\\ChatScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatScreen() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [selectedChatbot, setSelectedChatbot] = useState(\"\");\n  const [availableBots, setAvailableBots] = useState([]);\n  const [botSelected, setBotSelected] = useState(true);\n  const cancelToken = useRef(null);\n  useEffect(() => {\n    const fetchAvailableBots = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/get-available-bots\");\n        setAvailableBots(response.data);\n      } catch (error) {\n        console.error(\"Erro ao obter a lista de bots disponíveis:\", error);\n      }\n    };\n    fetchAvailableBots();\n  }, []);\n  useEffect(() => {\n    setMessages([]);\n    cancelToken.current && cancelToken.current.cancel();\n    cancelToken.current = axios.CancelToken.source();\n    setBotSelected(true);\n  }, [selectedChatbot]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!selectedChatbot) {\n      console.error(\"Selecione um bot antes de enviar uma mensagem.\");\n      setBotSelected(false);\n      return;\n    }\n    if (input.trim() !== \"\") {\n      const userMessage = {\n        id: messages.length,\n        text: input,\n        sender: \"user\"\n      };\n      setMessages(prevMessages => [...prevMessages, userMessage]);\n      setInput(\"\");\n      try {\n        const response = await axios.post(\"http://localhost:5000/openai/send-message\", {\n          message: input,\n          chatbotName: selectedChatbot\n        }, {\n          cancelToken: cancelToken.current.token\n        });\n        const botResponse = {\n          id: messages.length + 1,\n          text: response.data.openaiResponse,\n          sender: \"bot\"\n        };\n        setMessages(prevMessages => [...prevMessages, botResponse]);\n        scrollToBottom();\n      } catch (error) {\n        if (axios.isCancel(error)) {\n          console.log(\"Requisição cancelada devido a mudança de bot ativo\");\n        } else {\n          console.error(\"Erro ao enviar mensagem para a API da OpenAI:\", error);\n        }\n      }\n    }\n  };\n  const scrollToBottom = () => {\n    const messageArea = document.getElementById(\"message-area\");\n    if (messageArea) {\n      messageArea.scrollTop = messageArea.scrollHeight;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-screen-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-back\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"back-button\",\n        children: \"Voltar para a HomePage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Escolha um chatbot:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedChatbot,\n        onChange: e => {\n          setSelectedChatbot(e.target.value);\n          setBotSelected(true);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Selecione um chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), availableBots.map(bot => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: bot.name,\n          children: [bot.name, \" - \", bot.version]\n        }, bot._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), !botSelected && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"Selecione um bot antes de enviar uma mensagem.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"message-area\",\n      className: \"message-area\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `message ${message.sender}`,\n        children: message.text\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"message-form\",\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        className: \"message-input\",\n        id: \"user-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatScreen, \"Y76IjYONPsrVkp8Rc5qFiJPGEAU=\");\n_c = ChatScreen;\nexport default ChatScreen;\nvar _c;\n$RefreshReg$(_c, \"ChatScreen\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","axios","jsxDEV","_jsxDEV","ChatScreen","_s","messages","setMessages","input","setInput","selectedChatbot","setSelectedChatbot","availableBots","setAvailableBots","botSelected","setBotSelected","cancelToken","fetchAvailableBots","response","get","data","error","console","current","cancel","CancelToken","source","sendMessage","e","preventDefault","trim","userMessage","id","length","text","sender","prevMessages","post","message","chatbotName","token","botResponse","openaiResponse","scrollToBottom","isCancel","log","messageArea","document","getElementById","scrollTop","scrollHeight","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","disabled","map","bot","name","version","_id","style","color","onSubmit","type","_c","$RefreshReg$"],"sources":["C:/Users/ben/Desktop/Benjamin/ELIFE/CAPACITACAO/DESAFIO/definitive/chatbot-openai/frontend/src/components/ChatScreen.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../styles/main.css\";\r\n\r\nfunction ChatScreen() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [selectedChatbot, setSelectedChatbot] = useState(\"\");\r\n  const [availableBots, setAvailableBots] = useState([]);\r\n  const [botSelected, setBotSelected] = useState(true);\r\n  const cancelToken = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchAvailableBots = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://localhost:5000/get-available-bots\"\r\n        );\r\n        setAvailableBots(response.data);\r\n      } catch (error) {\r\n        console.error(\"Erro ao obter a lista de bots disponíveis:\", error);\r\n      }\r\n    };\r\n\r\n    fetchAvailableBots();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setMessages([]);\r\n    cancelToken.current && cancelToken.current.cancel();\r\n    cancelToken.current = axios.CancelToken.source();\r\n    setBotSelected(true);\r\n  }, [selectedChatbot]);\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!selectedChatbot) {\r\n      console.error(\"Selecione um bot antes de enviar uma mensagem.\");\r\n      setBotSelected(false);\r\n      return;\r\n    }\r\n\r\n    if (input.trim() !== \"\") {\r\n      const userMessage = { id: messages.length, text: input, sender: \"user\" };\r\n      setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n\r\n      setInput(\"\");\r\n\r\n      try {\r\n        const response = await axios.post(\r\n          \"http://localhost:5000/openai/send-message\",\r\n          { message: input, chatbotName: selectedChatbot },\r\n          { cancelToken: cancelToken.current.token }\r\n        );\r\n\r\n        const botResponse = {\r\n          id: messages.length + 1,\r\n          text: response.data.openaiResponse,\r\n          sender: \"bot\",\r\n        };\r\n        setMessages((prevMessages) => [...prevMessages, botResponse]);\r\n        scrollToBottom();\r\n      } catch (error) {\r\n        if (axios.isCancel(error)) {\r\n          console.log(\"Requisição cancelada devido a mudança de bot ativo\");\r\n        } else {\r\n          console.error(\"Erro ao enviar mensagem para a API da OpenAI:\", error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    const messageArea = document.getElementById(\"message-area\");\r\n    if (messageArea) {\r\n      messageArea.scrollTop = messageArea.scrollHeight;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-screen-container\">\r\n      <div className=\"nav-back\">\r\n        <Link to=\"/\" className=\"back-button\">\r\n          Voltar para a HomePage\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <h2>Escolha um chatbot:</h2>\r\n        <select\r\n          value={selectedChatbot}\r\n          onChange={(e) => {\r\n            setSelectedChatbot(e.target.value);\r\n            setBotSelected(true);\r\n          }}\r\n        >\r\n          <option value=\"\" disabled>\r\n            Selecione um chatbot\r\n          </option>\r\n          {availableBots.map((bot) => (\r\n            <option key={bot._id} value={bot.name}>\r\n              {bot.name} - {bot.version}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {!botSelected && (\r\n          <p style={{ color: \"red\" }}>\r\n            Selecione um bot antes de enviar uma mensagem.\r\n          </p>\r\n        )}\r\n      </div>\r\n      <div id=\"message-area\" className=\"message-area\">\r\n        {messages.map((message) => (\r\n          <p key={message.id} className={`message ${message.sender}`}>\r\n            {message.text}\r\n          </p>\r\n        ))}\r\n      </div>\r\n      <form className=\"message-form\" onSubmit={sendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          className=\"message-input\"\r\n          id=\"user-input\"\r\n        />\r\n        <button type=\"submit\" className=\"send-button\">\r\n          Enviar\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}