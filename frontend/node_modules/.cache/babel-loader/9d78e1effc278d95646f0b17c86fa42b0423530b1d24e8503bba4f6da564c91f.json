{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ben\\\\Desktop\\\\Benjamin\\\\ELIFE\\\\CAPACITACAO\\\\DESAFIO\\\\definitive\\\\chatbot-openai\\\\frontend\\\\src\\\\components\\\\ChatbotForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport openaiService from \"../api/OpenAiService\";\nimport \"../styles/main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatbotForm() {\n  _s();\n  const [botName, setBotName] = useState(\"\");\n  const [botVersion, setBotVersion] = useState(\"gpt-3.5-turbo\");\n  const [instructions, setInstructions] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [errors, setErrors] = useState({\n    botName: \"\",\n    instructions: \"\",\n    file: \"\"\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const clearErrors = () => {\n    setErrors({\n      botName: \"\",\n      instructions: \"\",\n      file: \"\"\n    });\n  };\n  const validateForm = () => {\n    clearErrors();\n    let hasError = false;\n    if (!botName) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        botName: \"Nome do Chatbot é obrigatório.\"\n      }));\n      hasError = true;\n    }\n    if (!instructions) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        instructions: \"Instruções são obrigatórias.\"\n      }));\n      hasError = true;\n    }\n    if (!file) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        file: \"Arquivo é obrigatório.\"\n      }));\n      hasError = true;\n    }\n    return !hasError;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isSubmitting) {\n      return;\n    }\n    if (!validateForm()) {\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      const response = await openaiService.createChatbot({\n        name: botName,\n        version: botVersion,\n        instructions: instructions,\n        file: file\n      });\n      console.log(\"Chatbot criado com sucesso!\", response);\n\n      // Aqui você pode atualizar o estado ou redirecionar o usuário para outra página, etc.\n    } catch (error) {\n      console.error(\"Erro ao criar o chatbot\", error);\n\n      // Atualize o estado ou forneça feedback de erro ao usuário.\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-back\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"back-button\",\n        children: \"Voltar para a HomePage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"chatbot-form\",\n      children: [errors.allFields && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message show-message\",\n        children: errors.allFields\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"botName\",\n        children: \"Nome do Chatbot:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"botName\",\n        value: botName,\n        onChange: e => setBotName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), errors.botName && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message show-message\",\n        children: errors.botName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"botVersion\",\n        children: \"Vers\\xE3o do Chatbot:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"botVersion\",\n        value: botVersion,\n        onChange: e => setBotVersion(e.target.value),\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"gpt-3.5-turbo\",\n          children: \"GPT-3.5-turbo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"instructions\",\n        children: \"Prompt:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"instructions\",\n        placeholder: \"Digite as instru\\xE7\\xF5es de comportamento do chatbot aqui\",\n        value: instructions,\n        onChange: e => setInstructions(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), errors.instructions && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message show-message\",\n        children: errors.instructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: \"Documento (.txt):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file\",\n        accept: \".txt\",\n        onChange: e => {\n          setFile(e.target.files[0]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), errors.file && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message show-message\",\n        children: errors.file\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        children: isSubmitting ? \"Criando Chatbot... Aguarde!\" : \"Criar Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatbotForm, \"A9BOGoLhGvQ8e+2oGblpa/ajXMA=\");\n_c = ChatbotForm;\nexport default ChatbotForm;\nvar _c;\n$RefreshReg$(_c, \"ChatbotForm\");","map":{"version":3,"names":["React","useState","Link","openaiService","jsxDEV","_jsxDEV","ChatbotForm","_s","botName","setBotName","botVersion","setBotVersion","instructions","setInstructions","file","setFile","errors","setErrors","isSubmitting","setIsSubmitting","clearErrors","validateForm","hasError","prevErrors","handleSubmit","e","preventDefault","response","createChatbot","name","version","console","log","error","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","allFields","htmlFor","type","id","value","onChange","target","placeholder","accept","files","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ben/Desktop/Benjamin/ELIFE/CAPACITACAO/DESAFIO/definitive/chatbot-openai/frontend/src/components/ChatbotForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport openaiService from \"../api/OpenAiService\";\r\nimport \"../styles/main.css\";\r\n\r\nfunction ChatbotForm() {\r\n  const [botName, setBotName] = useState(\"\");\r\n  const [botVersion, setBotVersion] = useState(\"gpt-3.5-turbo\");\r\n  const [instructions, setInstructions] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const [errors, setErrors] = useState({\r\n    botName: \"\",\r\n    instructions: \"\",\r\n    file: \"\",\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const clearErrors = () => {\r\n    setErrors({\r\n      botName: \"\",\r\n      instructions: \"\",\r\n      file: \"\",\r\n    });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    clearErrors();\r\n\r\n    let hasError = false;\r\n\r\n    if (!botName) {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        botName: \"Nome do Chatbot é obrigatório.\",\r\n      }));\r\n      hasError = true;\r\n    }\r\n\r\n    if (!instructions) {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        instructions: \"Instruções são obrigatórias.\",\r\n      }));\r\n      hasError = true;\r\n    }\r\n\r\n    if (!file) {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        file: \"Arquivo é obrigatório.\",\r\n      }));\r\n      hasError = true;\r\n    }\r\n\r\n    return !hasError;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isSubmitting) {\r\n      return;\r\n    }\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      const response = await openaiService.createChatbot({\r\n        name: botName,\r\n        version: botVersion,\r\n        instructions: instructions,\r\n        file: file,\r\n      });\r\n\r\n      console.log(\"Chatbot criado com sucesso!\", response);\r\n\r\n      // Aqui você pode atualizar o estado ou redirecionar o usuário para outra página, etc.\r\n    } catch (error) {\r\n      console.error(\"Erro ao criar o chatbot\", error);\r\n\r\n      // Atualize o estado ou forneça feedback de erro ao usuário.\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-form-container\">\r\n      <div className=\"nav-back\">\r\n        <Link to=\"/\" className=\"back-button\">\r\n          Voltar para a HomePage\r\n        </Link>\r\n      </div>\r\n      <form onSubmit={handleSubmit} className=\"chatbot-form\">\r\n        {errors.allFields && (\r\n          <div className=\"error-message show-message\">{errors.allFields}</div>\r\n        )}\r\n\r\n        <label htmlFor=\"botName\">Nome do Chatbot:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"botName\"\r\n          value={botName}\r\n          onChange={(e) => setBotName(e.target.value)}\r\n        />\r\n        {errors.botName && (\r\n          <div className=\"error-message show-message\">{errors.botName}</div>\r\n        )}\r\n\r\n        <label htmlFor=\"botVersion\">Versão do Chatbot:</label>\r\n        <select\r\n          id=\"botVersion\"\r\n          value={botVersion}\r\n          onChange={(e) => setBotVersion(e.target.value)}\r\n        >\r\n          <option value=\"gpt-3.5-turbo\">GPT-3.5-turbo</option>\r\n        </select>\r\n\r\n        <label htmlFor=\"instructions\">Prompt:</label>\r\n        <textarea\r\n          id=\"instructions\"\r\n          placeholder=\"Digite as instruções de comportamento do chatbot aqui\"\r\n          value={instructions}\r\n          onChange={(e) => setInstructions(e.target.value)}\r\n        />\r\n        {errors.instructions && (\r\n          <div className=\"error-message show-message\">\r\n            {errors.instructions}\r\n          </div>\r\n        )}\r\n\r\n        <label htmlFor=\"file\">Documento (.txt):</label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"file\"\r\n          accept=\".txt\"\r\n          onChange={(e) => {\r\n            setFile(e.target.files[0]);\r\n          }}\r\n        />\r\n        {errors.file && (\r\n          <div className=\"error-message show-message\">{errors.file}</div>\r\n        )}\r\n\r\n        <button type=\"submit\" disabled={isSubmitting}>\r\n          {isSubmitting ? \"Criando Chatbot... Aguarde!\" : \"Criar Chatbot\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatbotForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}