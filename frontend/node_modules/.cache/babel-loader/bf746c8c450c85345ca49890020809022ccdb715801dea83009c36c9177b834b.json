{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ben\\\\Desktop\\\\Benjamin\\\\ELIFE\\\\CAPACITACAO\\\\DESAFIO\\\\definitive\\\\chatbot-openai\\\\frontend\\\\src\\\\components\\\\ChatbotForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport openaiService from '../api/OpenAiService';\nimport '../styles/main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatbotForm() {\n  _s();\n  const [botName, setBotName] = useState('');\n  const [botVersion, setBotVersion] = useState('gpt-3.5-turbo');\n  const [instructions, setInstructions] = useState('');\n  const [file, setFile] = useState(null);\n  const [errors, setErrors] = useState({\n    botName: '',\n    instructions: '',\n    file: ''\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const formData = new FormData();\n  formData.append('name', botName);\n  formData.append('version', botVersion);\n  formData.append('instructions', instructions);\n  formData.append('file', file);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isSubmitting) {\n      return;\n    }\n    setErrors({\n      botName: '',\n      instructions: '',\n      file: ''\n    });\n    let hasError = false;\n    if (!botName) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        botName: 'Nome do Chatbot é obrigatório.'\n      }));\n      hasError = true;\n    }\n    if (!instructions) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        instructions: 'Instruções são obrigatórias.'\n      }));\n      hasError = true;\n    }\n    if (!file) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        file: 'Arquivo é obrigatório.'\n      }));\n      hasError = true;\n    }\n    if (hasError) {\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      const response = await openaiService.createChatbot(formData);\n\n      // Manipular a resposta da API, se necessário\n    } catch (error) {\n      // Lidar com erros da API\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-back\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"back-button\",\n        children: \"Voltar para a HomePage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"chatbot-form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatbotForm, \"EKBl1qS9KZDatdMLe+PW5rCILnM=\");\n_c = ChatbotForm;\nexport default ChatbotForm;\nvar _c;\n$RefreshReg$(_c, \"ChatbotForm\");","map":{"version":3,"names":["React","useState","Link","openaiService","jsxDEV","_jsxDEV","ChatbotForm","_s","botName","setBotName","botVersion","setBotVersion","instructions","setInstructions","file","setFile","errors","setErrors","isSubmitting","setIsSubmitting","formData","FormData","append","handleSubmit","e","preventDefault","hasError","prevErrors","response","createChatbot","error","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/ben/Desktop/Benjamin/ELIFE/CAPACITACAO/DESAFIO/definitive/chatbot-openai/frontend/src/components/ChatbotForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport openaiService from '../api/OpenAiService';\r\nimport '../styles/main.css';\r\n\r\nfunction ChatbotForm() {\r\n  const [botName, setBotName] = useState('');\r\n  const [botVersion, setBotVersion] = useState('gpt-3.5-turbo');\r\n  const [instructions, setInstructions] = useState('');\r\n  const [file, setFile] = useState(null);\r\n  const [errors, setErrors] = useState({\r\n    botName: '',\r\n    instructions: '',\r\n    file: '',\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const formData = new FormData();\r\n  formData.append('name', botName);\r\n  formData.append('version', botVersion);\r\n  formData.append('instructions', instructions);\r\n  formData.append('file', file);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isSubmitting) {\r\n      return;\r\n    }\r\n\r\n    setErrors({\r\n      botName: '',\r\n      instructions: '',\r\n      file: '',\r\n    });\r\n\r\n    let hasError = false;\r\n\r\n    if (!botName) {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        botName: 'Nome do Chatbot é obrigatório.',\r\n      }));\r\n      hasError = true;\r\n    }\r\n\r\n    if (!instructions) {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        instructions: 'Instruções são obrigatórias.',\r\n      }));\r\n      hasError = true;\r\n    }\r\n\r\n    if (!file) {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        file: 'Arquivo é obrigatório.',\r\n      }));\r\n      hasError = true;\r\n    }\r\n\r\n    if (hasError) {\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      const response = await openaiService.createChatbot(formData);\r\n\r\n      // Manipular a resposta da API, se necessário\r\n    } catch (error) {\r\n      // Lidar com erros da API\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-form-container\">\r\n      <div className=\"nav-back\">\r\n        <Link to=\"/\" className=\"back-button\">\r\n          Voltar para a HomePage\r\n        </Link>\r\n      </div>\r\n      <form onSubmit={handleSubmit} className=\"chatbot-form\">\r\n        {/* ... restante do código */}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatbotForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}